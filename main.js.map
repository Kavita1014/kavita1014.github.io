{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/environments/environment.ts","./src/app/auth/components/observable/observable.component.ts","./src/app/auth/components/observable/observable.component.html","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/layout/column-one/column-one.component.ts","./src/app/shared/layout/column-one/column-one.component.html","./src/app/auth/components/resetpassword/resetpassword.component.ts","./src/app/auth/components/resetpassword/resetpassword.component.html","./src/app/auth/components/home/home.component.ts","./src/app/auth/components/home/home.component.html","./src/app/auth/components/registration/registration.component.ts","./src/app/auth/components/registration/registration.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { observable } from 'rxjs';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ObservableComponent } from './components/observable/observable.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\n\nconst routes: Routes = [\n {path:'login', component: LoginComponent},\n {path:'registration', component: RegistrationComponent},\n {path:'resetpassword', component: ResetpasswordComponent},\n {path: 'home', component :HomeComponent},\n {path:'observable', component:ObservableComponent},\n {path:'', redirectTo:'login', pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-observable',\n  templateUrl: './observable.component.html',\n  styleUrls: ['./observable.component.css']\n})\nexport class ObservableComponent implements OnInit {\norderstatus:any;\n  data!: Observable<any>;\n\n  constructor() {\n   \n   }\n\n  ngOnInit(): void {\n\n    new Observable(observer=>{\n      setTimeout(() => {\n        observer.next('Order Placed');\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next('order packed');\n      }, 4000);\n\n      setTimeout(() => {\n        observer.next('Order shipped');\n      }, 6000);\n      \n      setTimeout(() => {\n        observer.next('Order in Transit');\n      }, 8000);\n\n      setTimeout(() => {\n        observer.next('Order deliverd');\n      }, 10000);\n    }).subscribe(val=>{\n        this.orderStatus(val);\n      });\n  }\n  orderStatus(val: any){\n    this.orderstatus =val;\n  }\n\n}\n","<p>observable works!</p>\n<p>Order Status:\n    {{orderstatus}}\n</p>\n\n","import { Component, OnInit } from '@angular/core';\nimport{FormGroup, FormControl, FormBuilder, NgForm, Form, Validators} from '@angular/forms'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nloginForm:FormGroup;\nvic: any ={};\n  constructor(private fb :FormBuilder) {\n    this.loginForm = this.fb.group({\n      email:['',Validators.compose([Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)])],\n      password:['',Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/)])]\n    })\n   }\n  //  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.\n  // [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  //  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  // [A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\n  // (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:\n  // [\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")\n  // @(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\n  // [(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|\n  //   [01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\n  //     [\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n  ngOnInit(): void {\n    console.log(this.loginForm.value)\n  }\n\n//  sitle!: string;\n add()\n  {\n    // this.sitle=\"testing\";\n    // localStorage.setItem('data',JSON.stringify(this.sitle));\n    console.log(this.loginForm.value);\n    this.vic=Object.assign(this.vic,this.loginForm.value);\n    // localStorage.setItem('Users',JSON.stringify(this.vic))\n    this.sub(this.vic)\n  }\n\n  sub(vic: any)\n  {\n    let users=[];\n    if(localStorage.getItem('Users'))\n    {\n      users= JSON.parse(localStorage.getItem('Users')|| '{}');\n      users=[vic, ...users];\n    }\n    else{\n      users=[vic]\n    }\n    localStorage.setItem('Users',JSON.stringify(users));\n  }\n}\n","\n<div class=\"container-fluid\">\n  \n    <div class=\"row bg-img\">\n      \n      <div class=\"col-md-4 offset-md-4 mt-4\">\n        <form [formGroup]='loginForm' class=\"box\">\n        <h2>Login</h2>\n    \n        \n    \n          <div class=\"mb-2\">\n            <label for=\"Loginusername\" class=\"form-label\">Enter Email Id</label>\n            <input type=\"text\" class=\"form-control\" formControlName='email' required placeholder=\"Enter Your Email\"  >\n            <div *ngIf=\"loginForm.controls.email.dirty && loginForm.controls.email.invalid\">\n              <span  *ngIf=\"loginForm.controls.email.hasError('required')\">\n                Email can't be empty!!!!!!!\n              </span>\n              <span *ngIf=\"loginForm.controls.email.hasError('pattern')\">\n                Please enter a valid email!!!!\n              </span>\n            </div>\n          </div>\n    \n          <div class=\"mb-2\">\n            <label for=\"LoginPassword\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" formControlName='password' required  placeholder=\"Enter your password\"> \n            <div *ngIf=\"loginForm.controls.password.dirty && loginForm.controls.password.invalid\">\n              <span *ngIf=\"loginForm.controls.password.hasError('required')\">\n                Password can't be empty!!!!!!!\n              </span>\n              <span *ngIf=\"loginForm.controls.password.hasError('pattern')\">\n                Not The Correct Password!!!!\n              </span>\n    \n            </div>\n          </div>\n    \n          <div class=\"mb-2 form-check\">\n            <a [routerLink]=\"['/resetpassword']\">Forget Password?</a>\n          </div>\n    \n          <div class=\"mb-2 form-check\">\n            <p>If You're Not Registered, Please Register!</p>\n            <a [routerLink]=\"['/registration']\">Sign up!</a>\n          </div>\n        \n          <button type=\"button\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\" [routerLink]=\"['/home']\" (click)=\"add()\" >Login <i\n              class=\"fas fa-sign-in-alt\" ></i> </button>\n    \n    \n    \n        </form>\n      </div>\n    \n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnOneComponent } from './layout/column-one/column-one.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [ColumnOneComponent, HeaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports:[\n    ColumnOneComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shell-project';\n}\n","<app-column-one></app-column-one>\n\n<div class=\"container-fluid\">\n   \n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ObservableComponent } from './components/observable/observable.component';\n\n@NgModule({\n  declarations: [LoginComponent, RegistrationComponent, ResetpasswordComponent, HomeComponent, ObservableComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    \n    \n    \n    \n  ],\n  exports:[\n    LoginComponent,\n     RegistrationComponent, \n     ResetpasswordComponent,\n     HomeComponent\n  ]\n})\nexport class AuthModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    SharedModule,\n    ReactiveFormsModule,\n    \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" >ᴠɪꜱᴀ ᴏɴʟɪɴᴇ</a>\n        <button class=\"navbar-toggler\" \n        type=\"button\" \n        data-bs-toggle=\"collapse\" \n        data-bs-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\" \n        aria-expanded=\"false\" \n        aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\"  [routerLink]=\"['login']\" routerLinkActive='active'>Login </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" [routerLink]=\"['registration']\" routerLinkActive='active'> Registration</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" [routerLink]=\"['resetpassword']\" routerLinkActive='active'>Forget Password</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" [routerLink]=\"['home']\" routerLinkActive='active'>Home</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav> -->\n<nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">ᴠɪꜱᴀ ᴏɴʟɪɴᴇ</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link active\"  [routerLink]=\"['login']\" routerLinkActive='active'>Login </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['registration']\" routerLinkActive='active'> Registration</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['resetpassword']\" routerLinkActive='active'>Forget Password</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['home']\" routerLinkActive='active'>Home</a>\n            </li>\n        </ul>\n    </div>  \n  </nav>\n  ","import { Component, OnInit } from '@angular/core';\nimport { resolve } from 'dns';\nimport { promise } from 'protractor';\n\n@Component({\n  selector: 'app-column-one',\n  templateUrl: './column-one.component.html',\n  styleUrls: ['./column-one.component.css']\n})\n \nexport class ColumnOneComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit():void{\n//   let shop= new Promise((resolve, reject)=>\n//   {\n\n//   resolve(\"resolved\")\n\n//   });\n//   shop.then((res: any)=>){\n//     console.log('success')\n//   }\n  \n// }\n\n//   myntra()\n//   {\n//     return true\n//   }\n//   flipkart()\n//   {\n//     return false\n//   }\n//   mymyntra=\n//   {\n//   sale:\"12am\",\n//   off:\"80%\",\n//   }\n//   myshein=\n//   {\n//     sale:\"12am\",\n//     off:\"80%\",\n//   }\n  \n//   noshop=\n//   {\n//   sale:\"notavailable\"\n//   }\n}\n}\n","<app-header></app-header>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n  forgetpasswordform:FormGroup;\n  constructor(private fb:FormBuilder) { \n    this.forgetpasswordform=this.fb.group({\n\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row  bg-img\">\n    <div class=\"col-md-6 offset-md-3 mt-4\">\n        <h3>Reset Password</h3>\n        <form [formGroup]='forgetpasswordform'> \n\n            <div class=\"form-group\">\n                <label for=\"resetPasswordEmail\">Account Email</label>\n                <input type=\"email\"\n                       class=\"form-control\"\n                       id=\"resetPasswordEmail\"\n                       required pattern=\"^\\S+@\\S+$\"\n                       placeholder=\"Enter email\">\n\n                       <div class=\"mb-3\">\n                        <label for=\"Password\" class=\"form-label\">Password</label>\n                        <input type=\"password\" \n                        class=\"form-control\" \n                        id=\"Password\"\n                        required pattern=\".{8,}\">\n                        \n                      </div>\n                      <div class=\"mb-3\">\n                        <label for=\"Pasword\" class=\"form-label\"> Confirm Password</label>\n                        <input type=\"password\" \n                        class=\"form-control\" \n                        id=\"Pasword\"\n                        required pattern=\".{8,}\">\n                        \n                      </div>\n            </div>\n\n            <button type=\"submit\"\n                    class=\"btn btn-primary\" [routerLink]=\"['/login']\">Reset Password <i class=\"fas fa-paper-plane\"></i></button>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"image\">\n    <h1>\n        Visa Online Inc.\n    </h1>\n    </div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport{FormGroup, FormControl, FormBuilder, NgForm, Form, Validators, AbstractControl} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  registrationform:FormGroup;\n  refrence:any={};\n  submitted= false;\n  customValidator: any;\n  constructor(private fb:FormBuilder) {\n    this.registrationform=this.fb.group({\n      email:['',Validators.compose([Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)])],\n      Username:['', Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^[A-Za-z]+$/)])],\n      mobile:['', Validators.compose([Validators.required,Validators.minLength(8),])],\n      password:['',Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/)])],\n      confirmpassword:['',Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/)])],\n    //   passwords:fb.group(\n    //     {\n    //     password:['',Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/)])],\n    //   confirmpassword:['',Validators.compose([Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/)])],\n    // },\n    //  { \n    //    validator: [this.customValidator.MatchPassword('password', 'confirmPassword')],\n    //   }\n    //   )\n      \n\n  },\n\n)\n  }\n\n  ngOnInit(): void {\n  }\n  get registerFormControl() {\n    return this.registrationform.controls;\n  }\n  \n  // get f() { return this. registrationform.controls; }\n  add()\n  {\n    // this.sitle=\"testing\";\n    // localStorage.setItem('data',JSON.stringify(this.sitle));\n    console.log(this.registrationform.value);\n    this.refrence=Object.assign(this.refrence,this.registrationform.value);\n    // localStorage.setItem('Users',JSON.stringify(this.vic))\n    this.sub(this.refrence)\n  }\n\n  sub(refrence: any)\n  {\n    let users=[];\n    if(localStorage.getItem('Users')){\n      users= JSON.parse(localStorage.getItem('Users')|| '{}');\n      users=[refrence, ...users]; }\n    else{\n      users=[refrence] }\n    localStorage.setItem('Users',JSON.stringify(users));\n  }\n  // export function passValidator(control: AbstractControl) {\n  //   if (control && (control.value !== null || control.value !== undefined)) {\n  //       const cnfpassValue = control.value;\n\n  //       const passControl = control.root.get('password'); // magic is this\n  //       if (passControl) {\n  //           const passValue = passControl.value;\n  //           if (passValue !== cnfpassValue || passValue === '') {\n  //               return {\n  //                   isError: true\n  //               };\n  //           }\n  //       }\n  //   }\n\n  //   return null;\n \n\n}\n","<div class=\"row bg-img \">\n    <div class=\"col-md-4 offset-md-4 mt-4\">\n      <form [formGroup]='registrationform' class=\"box\">\n        <h3>Register New Employer</h3>\n        \n            <div class=\"form-group\">\n                <label for=\"registerUsername\">Username</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"Username\" placeholder=\"Enter username\" required>\n                <div *ngIf=\"registrationform.controls.Username.dirty && registrationform.controls.Username.invalid\">\n                    <span *ngIf=\"registrationform.controls.Username.hasError('pattern')\">\n                        Please Use Alphabets only!!!!!!!\n                      </span>\n                </div>\n                <div >\n                    \n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\">Mobile</label>\n                <input type=\"number\" class=\"form-control\" id=\"phone\" placeholder=\"Mobile No.\" formControlName='mobile'\n                    required pattern=\".{9,}\">\n            </div>\n            <!-- <div class=\"form-group\">\n                <label for=\"registerEmail\">Email</label>\n                <input type=\"email\" class=\"form-control\" id=\"registerEmail\" placeholder=\"Enter email\"\n                    formControlName='email' required pattern=\"^\\S+@\\S+$\">\n            </div> -->\n            <div class=\"mb-3\">\n                <label for=\"Loginusername\" class=\"form-label\">Enter Email Id</label>\n                <input type=\"text\" class=\"form-control\" formControlName='email' required placeholder=\"Enter Your Email\" >\n                <div *ngIf=\"registrationform.controls.email.dirty && registrationform.controls.email.invalid\" >\n                  <span  *ngIf=\"registrationform.controls.email.hasError('required')\">\n                    Email can't be empty!!!!!!!\n                  </span>\n                  <span *ngIf=\"registrationform.controls.email.hasError('pattern')\" class=\"text-danger\">\n                    Please enter a valid email!!!!\n                  </span>\n                </div>\n              </div>\n            <div>\n\n                <div class=\"form-group\">\n                    <label for=\"registerPassword\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"registerPassword\" formControlName='password'\n                        placeholder=\"Enter the Password\">\n                        <!-- <div class=\"error\" *ngIf=\"registrationform.controls.password.dirty && registrationform.controls.password.invalid\"> -->\n                            <div class=\"error text-danger\" *ngIf=\"registrationform.controls['password'].value && registrationform.controls['confirmpassword'].value\">\n                                <span  *ngIf=\"registrationform.controls['password'].value!==registrationform.controls['confirmpassword'].value\">\n                                    Password must be same!!!!!!!!!\n                                </span>\n                            </div>\n                           \n                          <!-- </div> -->\n                        \n                </div> \n\n                <div class=\"form-group\">\n                    <label for=\"cnfPassword\"> Confirm Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"cnfPassword\" formControlName='confirmpassword'\n                        placeholder=\"Confirm password\">\n                        <!-- <div *ngIf=\"registrationform.controls.password.dirty && registrationform.controls.password.invalid\">\n                            <span  *ngIf=\"registrationform.controls['password'].value!=registrationform.controls['confirmpassword'].value\">\n                              Password must be same!!!!!!!!!\n                            </span>\n                          </div> -->\n                </div>\n\n            </div>\n\n\n            <button type=\"submit\" class=\"btn btn-primary\" [routerLink]=\"['/login']\" (click)=\"add()\">Register <i\n                    class=\"fas fa-sign-in-alt\"></i></button>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}